package org.inchain.network;

import java.net.InetSocketAddress;

import org.inchain.Configure;
import org.inchain.crypto.Sha256Hash;
import org.inchain.message.DefaultMessageSerializer;
import org.inchain.message.MessageSerializer;
import org.inchain.store.BlockStore;
import org.inchain.utils.Hex;
import org.inchain.utils.Utils;

/**
 * 测试网络
 * @author ln
 *
 */
public class TestNetworkParams extends NetworkParams {

	public TestNetworkParams() {
		seedManager = new RemoteSeedManager();


//    	seedManager.add(new Seed(new InetSocketAddress("47.93.16.125", Configure.DEFAULT_PORT)));
//    	seedManager.add(new Seed(new InetSocketAddress("119.23.249.26", Configure.DEFAULT_PORT)));
//   	seedManager.add(new Seed(new InetSocketAddress("119.23.253.3", Configure.DEFAULT_PORT)));
//    	seedManager.add(new Seed(new InetSocketAddress("119.23.254.99", Configure.DEFAULT_PORT)));
		seedManager.add(new Seed(new InetSocketAddress("192.168.1.190", Configure.DEFAULT_PORT)));
		seedManager.add(new Seed(new InetSocketAddress("192.168.1.186", Configure.DEFAULT_PORT)));
		seedManager.add(new Seed(new InetSocketAddress("192.168.1.187", Configure.DEFAULT_PORT)));
		init();
	}


	public TestNetworkParams(SeedManager seedManager) {
		this.seedManager = seedManager;
		init();
	}

	private void init() {

		id = ID_TESTNET;

		packetMagic = 629268888L;

		this.acceptableAddressCodes = new int[] {getSystemAccountVersion(), getCertAccountVersion()};
	}

	/**
	 * 测试网络的创世块
	 */
	@Override
	public BlockStore getGengsisBlock() {
		BlockStore gengsisBlock = new BlockStore(this, Hex.decode("000000000000000000000000000000000000000000000000000000000000000000000000bc69411d1198bbd76e0639c53729287eae94af91ffc839bb4c495f50ef12f6ddba417059000000000000ba417059822102883a9625a871e79c070e316edafc97eac2f6c97b218d0e55726f25be2a963e9276a9144237cccf6ff9a7674a8fc47c60278fdd23e9f309884630440220592c744fd9e25153afbb335afc4ea080424e6d016a7cfe50b2571f7ba60f5c6b02203a01ce59bdf53c16c4f3126b81b0c13fd30083ab2cce44a7f3eb7f4707959753ac140101000000010012117468697320612067656e6773697320747800000000010080faca73f91f00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688acba4170590000000000020100000001014bd16fec6116afb56b7976f940e00825d86086cf3cead0da028c79ccfb87b5cd000000006b4830450221008b01329965ee56e2a3d06dd69593dbf726251229790c63a4834249458ae0792302207e267314bc018ffdc6df6fa0a8d4c710e97e0ac89ce54fa083c817673e5413bb01210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020080c6a47e8d03000078c2481976a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988ac00003426f56b1c00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688acba41705900000000000601000000ba41705900000000832102883a9625a871e79c070e316edafc97eac2f6c97b218d0e55726f25be2a963e9276a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988473045022100ee893b13077b6d1374012c21550d0e1c1b915722d91b79a3c1125566e9038ac402200a4f09d73b7eeaca467ccb351308a84b3356663bf61baf5fabb93c8497ff464aac4237cccf6ff9a7674a8fc47c60278fdd23e9f30901000000000000000000000000000000000000000000000000000000000000000000000000000000000201000000010128d6653fe406a4139a836237777f534c68fc9afe8f48b9966abade26c8bb371f010000006a47304402200f4857e3c19b04f03aa0f34a75c8e1e27264896a095d1507fa2216c52525bba5022004a37fe1b3988caabb18fb143ba76c5e754cbf8d172f4880c4176fbbddc7943901210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020010a5d4e8000000000000001976a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988ac00c0b91502111c00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688acba417059000000000003010000000000ba4170590000000000832102883a9625a871e79c070e316edafc97eac2f6c97b218d0e55726f25be2a963e9276a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988473045022100c94e784c7d57b0603b654b1506b46b07682789e72651c92c08525400e2229bef022042c3c8a06d91869cf63ef0b099e9d30669903c0c21399f5cdc9ab791f32d5514ac8dc9805e4237cccf6ff9a7674a8fc47c60278fdd23e9f3090601000000ba41705900000000822103a7db4a854e3f2ae3a30aa759bfd39045f6a80c967b3fd81036acebc54b557ece76a9142c1179b1e05fb8652644f6c61a033d284310091288463044022022878bfd98a63f101146af45669ad60073bc4445f896d1bc5774a9df34f7266f02202a8a7f09b58304e4529f0292e233d4ae79224ac16fc143a437560ae8abad5cbaac2c1179b1e05fb8652644f6c61a033d28431009120100000000000000000000000000000000000000000000000000000000000000000000000000000000020100000001012bdb55ce0b1878734b58796b0a55eb6a7f8ec377cf6076e04bb187172a2dbdb2010000006b483045022100db6ae9c82a0cee6ad97ca9a2cd9779c7176ecb9ac554e0e6157bbc08fb6b84ee0220181b00383bdba1922aa5a8fef7a391cee5c95ef77f08ba8c98fd11b471e8acd901210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020010a5d4e8000000000000001976a9142c1179b1e05fb8652644f6c61a033d284310091288ac00803f050fb61b00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688acba417059000000000003010000000000ba4170590000000000822103a7db4a854e3f2ae3a30aa759bfd39045f6a80c967b3fd81036acebc54b557ece76a9142c1179b1e05fb8652644f6c61a033d284310091288463044022047f4ae923879787cb406214d24f344ff17a201f3d78435741e569df966ed52d2022009b6b46f08b83dd1bb3f3a469446c12a9adc564ad459b0b478c59c99d62c299cac9fc9805e2c1179b1e05fb8652644f6c61a033d28431009120601000000ba417059000000008221033e371b2f3d42dd525833bcce12cb0d404fb73898bdea3e6794bd8ec552c9ba9c76a914b3fcd687a5c2b2617de0d504cfa7d12db93bb00c8846304402206304c788053395bcdb841f0fdb2fdb12fdcba6a642dd457eca6ad0f42e965a0902205614b1c9141e6dc16d38999329f447885955646867f3a93a009b4f3bdff897e7acb3fcd687a5c2b2617de0d504cfa7d12db93bb00c01000000000000000000000000000000000000000000000000000000000000000000000000000000000201000000010164bf5395676f83f74d5b0d685da3053a1d8cfe56b953b5ffc782b3900d07960a010000006b483045022100fd3d35a54348f8585f907b8c7cb5aba673a85b312ebd4b98e64e0b280ad110e202207379768d56da20705375406b56082f7d0a869fa8d8e58840081d07b10e209da201210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020010a5d4e8000000000000001976a914b3fcd687a5c2b2617de0d504cfa7d12db93bb00c88ac0040c5f41b5b1b00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688acba417059000000000003010000000000ba41705900000000008221033e371b2f3d42dd525833bcce12cb0d404fb73898bdea3e6794bd8ec552c9ba9c76a914b3fcd687a5c2b2617de0d504cfa7d12db93bb00c8846304402202e513b0c38b6c44dbe84d20d7f7bb5d10b0ba94f869dad682075abd40deb854c02205c5e7aa183ff7c69645f9b92fd794466b6656aace4760dc57795023f6cf4894caca2c9805eb3fcd687a5c2b2617de0d504cfa7d12db93bb00c0601000000ba41705900000000832103bf7759e9b81f8ff1b99732b3ee36aea0abff68c818b8839c318ad350e9642cb076a914c3bfdb8a67f35b6e4ea1ee3ae7b91eff58ec81a888473045022100ee3e92decef27d1ba36167c8bc88412c6f5baa599234ec15868d958f7cfff12c02203fe65a134dd1316c7e70e1a91bfe9a99d09fda458b4d205c4cb864a7aa4426c2acc3bfdb8a67f35b6e4ea1ee3ae7b91eff58ec81a80100000000000000000000000000000000000000000000000000000000000000000000000000000000020100000001011bb6f5e8a33878e7ecb3b2f57e0b12d59591f03a970a2201dfdffc26d8d38a76010000006a47304402202ef5113ae38b0c4f4ac30090d325dfcc4cc01d820af9bbfa338114ae8f52531802203101f7a9072054d12261e5b455cd92a0a12a6774e9a5c45608a17599340d2ee901210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020010a5d4e8000000000000001976a914c3bfdb8a67f35b6e4ea1ee3ae7b91eff58ec81a888ac00004be428001b00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688acba41705900000000000601000000ba4170590000000083210200d482122f8537ad2fa1af1914e088d6b308824a8ef4dc8b68fa0e0a88c484e376a9145f1a078b610d92a3110b2c1a7f880b0d2442e53088473045022100c8596675072f607a0c495c4860582eecb711c12c248506093674c36982bae0780220527257db8bfe7963cfbd1cc3d315be02b865e088de089ce7b15c95a78527dc0cac5f1a078b610d92a3110b2c1a7f880b0d2442e5300100000000000000000000000000000000000000000000000000000000000000000000000000000000020100000001012411baf066cac095ce717fc5f65eaf1754d346ed4b22689c2bd0bbc62201e6b0010000006b4830450221009de12ab294bb6ad372caf6b29e98dd439bcf300a428e41cfd02184938f2f8f020220369adcd3547297cc8004a58eb4f58cbff5f1804f7f048825540af4a2e780802401210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020010a5d4e8000000000000001976a9145f1a078b610d92a3110b2c1a7f880b0d2442e53088ac00c0d0d335a51a00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688acba41705900000000000601000000ba41705900000000822103e8769d1901a4ef006054405c16716d6648fffe628385db5586c7fa18c3df5da876a914df639c6066a817a6be28b532839f8e1e85594cd4884630440220353463d0ec8f28a09b9f82bcaaad8872a06e3dbdd08d9a455185359b183c7bd60220775bd45d967d96c8177c6eb8f9111d70c71501d5c77597c7ef7c06d03db2157facdf639c6066a817a6be28b532839f8e1e85594cd4010000000000000000000000000000000000000000000000000000000000000000000000000000000002010000000101c1c355ed12f890ec4c19cb69ff94586eb4363d0a72d59462da63fc369670d20e010000006b4830450221009bc15764f2db966677a7ece131033d267c452e79353033a9dac9e2c904634cee02204c39247ee677416890c0f5d42bc7db82dfa9e9e8c2d886fd29bf23a895596eb401210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020010a5d4e8000000000000001976a914df639c6066a817a6be28b532839f8e1e85594cd488ac008056c3424a1a00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688acba41705900000000000601000000ba41705900000000822103368f8061e02694e37da199c07c3e2f2506cdd748efee493f0d1c52ae7494428f76a914e3453a80144f6ac24baf01f20455c6167b9854858846304402201ef371211cb370b34092eab384d7c137efe982cca2973b17137c82d8b6161c2a0220299c60fbddbc5a0b176dd58fb99abcbb18007dc6fee19b3415a3913cd54aca02ace3453a80144f6ac24baf01f20455c6167b9854850100000000000000000000000000000000000000000000000000000000000000000000000000000000020100000001011d2b802d540335036ad43fc4cc5836ad04a99f9bd91eaab296bc38ea85768a18010000006b483045022100dc555b1c5d1645060e811b6959955c911f32d477609c2ecb7f76b47c87ae40bc02200b2c6316b4b116ab3cf749568d5c97309096eecf0d2abe1c3ae136b3f382d41801210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020010a5d4e8000000000000001976a914e3453a80144f6ac24baf01f20455c6167b98548588ac0040dcb24fef1900000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688acba41705900000000000b0100000072187f5e57d57a341ea0270903796f2df1af96feaef49ce457d57a341ea0270903796f2df1af96feaef49ce402fd23022b046e616d6506e5908de7a7b01ee9878de5ba86e58db0e993bee7a791e68a80e69c89e99990e585ace58fb822076164647265737306e59cb0e59d8012e9878de5ba86e5b882e58d97e5b2b8e58cba44046c6f676f06e59bbee7898737687474703a2f2f66696c652e696e636861696e2e6f72672f696d616765732f696e636861696e5f6c6f676f5f313030783130302e706e672b0a637265646974436f64650ce4bfa1e794a8e4bba3e7a0811239313530303130384d41355542333248334e1a0570686f6e6506e794b5e8af9d0c3032332d383633333130363927077765627369746506e5ae98e7bd911768747470733a2f2f7777772e696e636861696e2e6f7267fd1d0108646573637269707406e68f8fe8bfb0fd0a01e9878de5ba86e58db0e993bee7a791e68a80e69c89e99990e585ace58fb8e698afe4b880e5aeb6e4bba5e58cbae59d97e993bee68a80e69cafe9a9b1e58aa8e79a84e5889be696b0e59e8be4bc81e4b89aefbc8ce585b6e4b8bbe5afbce79a84e58cbae59d97e993bee7a4bee58cbae9a1b9e79bae496e636861696e2de58db0e993bee698afe4b880e4b8aae4bba5e998b2e4bcaae4b8bae59fbae7a180e4b89ae58aa1e79a84e585ace5bc80e5b9b3e58fb0efbc8ce4b8bae7a4bee4bc9ae59084e4bc81e4b89ae38081e69cbae69e84e38081e889bae69cafe5aeb6e7ad89e68f90e4be9be59381e7898ce38081e79fa5e8af86e4baa7e69d83e4bf9de68aa4e69c8de58aa1e38082022102d635fc8f9f34240ea4823f910d6cfe90a0c1820e68e033093ef22818481a2e8421035ad53bcdbcf6789f744c4f0d37e9042c13f1582761bda4aab7cb080e90fe4672012102383fb2d0bef4232699216dc17a5e90f3445168c029582c99250077dbfe15f18f82c220baf83aa4bc685264c1a10bdd742a14ec8af255ac327332ee1148742b7a0dc706c314716b68dd463d01263a7ff4a7c52eae528d71439688473045022100c2c8d230cf63736d872d8ba9bcc19f255b256a4cccacceb0d45850826aa3bcf302206610eb7d90f0876f7eea8e88c1f9e5f6fb86e7774156a6f010902d2e38085e02ac"));

		Sha256Hash merkleHash = gengsisBlock.getBlock().buildMerkleHash();

		if(log.isDebugEnabled()) {
			log.debug("the gengsis block merkle hash is : {}", merkleHash);
		}
		Utils.checkState("bc69411d1198bbd76e0639c53729287eae94af91ffc839bb4c495f50ef12f6dd".equals(Hex.encode(merkleHash.getBytes())), "the gengsis block merkle hash is error");

		if(log.isDebugEnabled()) {
			log.debug("the gengsis block hash key is : {}", gengsisBlock.getBlock().getHash());
		}
		Utils.checkState("7fa0a00789307b02a4a6119828603f3569ecd9576d11b6d679b598736d746f9b".equals(Hex.encode(gengsisBlock.getBlock().getHash().getBytes())), "the gengsis block hash is error");

		return gengsisBlock;

	}

	@Override
	public int getProtocolVersionNum(ProtocolVersion version) {
		return version.getVersion();
	}

	@Override
	public MessageSerializer getSerializer(boolean parseRetain) {
		return new DefaultMessageSerializer(this);
	}

	/**
	 * 获取该网络的认证管理账号的hash160
	 * @return byte[]
	 */
	@Override
	public byte[] getCertAccountManagerHash160() {


		//return Hex.decode("8e168bb4963f0523b9ee1c734d3c142976581930");//root
		//return Hex.decode("b326aeb9c6710864441b7c6a282ce924b4c31749");//manager
		return Hex.decode("481e05c83604abf86cca029c4260674c45c85c58");//cer_manager_1
	}

	@Override
	public byte[] getCommunityManagerHash160() {
		return Hex.decode("481e05c83604abf86cca029c4260674c45c85c58");//cer_manager_1
	}

	/**
	 * 测试网络，普通地址以t开头
	 */
	@Override
	public int getSystemAccountVersion() {
		return 128;
	}

	/**
	 * 测试网络，认证地址以c开头
	 */
	@Override
	public int getCertAccountVersion() {
		return 88;
	}
}
